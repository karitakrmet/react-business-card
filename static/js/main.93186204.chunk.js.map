{"version":3,"sources":["components/ColorPaletteOption.js","components/Colors.js","components/FontComboButton.js","components/Button.js","components/EmailIcon.js","App.js","index.js"],"names":["ColorPaletteOption","props","Fragment","className","value","selectedColoredOption","onChange","handleChange","name","coloredOptions","map","coloredOption","i","key","label","Button","style","backgroundColor","color","width","height","onClick","pickColor","ShuffleIcon","viewBox","fill","d","ShuffleIconLoading","xmlns","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","Colors","colors","bounce","generatePalette","onAnimationEnd","FontComboButton","type","fontComboName","checked","changeFont","EmailIcon","fontCombos","primaryFont","secondaryFont","App","state","fullName","speciality","companyName","eMail","fontCombo","nameColor","specialityColor","companyColor","emailColor","flipped","companyURLKeyword","hasError","companyURL","backsideBackground","palette","a","async","setState","fetch","response","json","data","fetchedColors","matching_colors","hexColors","filter","colorCode","length","push","getDominantColors","colorThief","ColorThief","img","Image","crossOrigin","src","addEventListener","getPalette","rgbPalette","e","target","logoPickColor","flip","submitURL","this","document","title","placeholder","selectedColorOption","fontFamily","charAt","toUpperCase","background","alt","onError","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.93186204.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function ColorPaletteOption(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Color Palette</h2>\r\n      <select\r\n        className='colorOptionBar'\r\n        value={props.selectedColoredOption}\r\n        onChange={props.handleChange}\r\n        name={props.name}\r\n      >\r\n        {props.coloredOptions.map((coloredOption, i) => (\r\n          <option value={coloredOption.value} key={i}>{coloredOption.label}</option>\r\n        ))}\r\n      </select>\r\n    </React.Fragment>\r\n  )\r\n}","import React from 'react';\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      style={{\r\n        backgroundColor: props.color,\r\n        width: props.width,\r\n        height: props.height\r\n      }}\r\n      onClick={props.pickColor}\r\n      className={props.className}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nfunction ShuffleIcon(props) {\r\n  return (\r\n    <svg className={props.className} width=\"32\" height=\"32\" viewBox=\"0 0 20 20\">\r\n      <path\r\n        fill=\"black\"\r\n        d=\"M19.305,9.61c-0.235-0.235-0.615-0.235-0.85,0l-1.339,1.339c0.045-0.311,0.073-0.626,0.073-0.949\r\n        c0-3.812-3.09-6.901-6.901-6.901c-2.213,0-4.177,1.045-5.44,2.664l0.897,0.719c1.053-1.356,2.693-2.232,4.543-2.232\r\n        c3.176,0,5.751,2.574,5.751,5.751c0,0.342-0.037,0.675-0.095,1l-1.746-1.39c-0.234-0.235-0.614-0.235-0.849,0\r\n        c-0.235,0.235-0.235,0.615,0,0.85l2.823,2.25c0.122,0.121,0.282,0.177,0.441,0.172c0.159,0.005,0.32-0.051,0.44-0.172l2.25-2.25\r\n        C19.539,10.225,19.539,9.845,19.305,9.61z M10.288,15.752c-3.177,0-5.751-2.575-5.751-5.752c0-0.276,0.025-0.547,0.062-0.813\r\n        l1.203,1.203c0.235,0.234,0.615,0.234,0.85,0c0.234-0.235,0.234-0.615,0-0.85l-2.25-2.25C4.281,7.169,4.121,7.114,3.961,7.118\r\n        C3.802,7.114,3.642,7.169,3.52,7.291l-2.824,2.25c-0.234,0.235-0.234,0.615,0,0.85c0.235,0.234,0.615,0.234,0.85,0l1.957-1.559\r\n        C3.435,9.212,3.386,9.6,3.386,10c0,3.812,3.09,6.901,6.902,6.901c2.083,0,3.946-0.927,5.212-2.387l-0.898-0.719\r\n        C13.547,14.992,12.008,15.752,10.288,15.752z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction ShuffleIconLoading(props) {\r\n  return (\r\n    <svg\r\n      className={props.className}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"28\"\r\n      height=\"28\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"black\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    >\r\n      <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"6\" />\r\n      <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"22\" />\r\n      <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\r\n      <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\r\n      <line x1=\"2\" y1=\"12\" x2=\"6\" y2=\"12\" />\r\n      <line x1=\"18\" y1=\"12\" x2=\"22\" y2=\"12\" />\r\n      <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\r\n      <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\n\r\nexport default function Colors(props) {\r\n  return (\r\n    <div className='colorsShuffle'>\r\n      <div className='colors'>\r\n        {props.colors.map((color, i) => (\r\n          <Button\r\n            color={color}\r\n            key={i}\r\n            width='48px'\r\n            height='48px'\r\n            pickColor={() => props.pickColor(color, i)}\r\n            className='colorBox'\r\n          />\r\n        ))}\r\n      </div>\r\n      <button\r\n        className={props.bounce ? 'shuffleColorsButton bounce' : 'shuffleColorsButton'}\r\n        onClick={props.generatePalette}\r\n        onAnimationEnd={props.onAnimationEnd}\r\n      >\r\n        {props.bounce ? <ShuffleIconLoading className='shuffleIconLoading' /> : <ShuffleIcon className='shuffleIcon' />}\r\n      </button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function FontComboButton(props) {\r\n  return (\r\n    <div className=\"fontComboButtons\">\r\n      <input\r\n        type=\"radio\"\r\n        \r\n        value={props.fontComboName}\r\n        checked={props.checked}\r\n      />\r\n      <span\r\n        onClick={props.changeFont}\r\n      >\r\n        {props.fontComboName}\r\n      </span>\r\n\r\n      <div\r\n        className=\"check\"\r\n        onClick={props.changeFont}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <button\r\n      style={{\r\n        backgroundColor: props.color,\r\n        width: props.width,\r\n        height: props.height\r\n      }}\r\n      onClick={props.pickColor}\r\n      className={props.className}\r\n    />\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function EmailIcon(props) {\r\n  return (\r\n    <svg className={props.className} viewBox=\"0 0 20 20\" width=\"30\" height=\"30\">\r\n      <path\r\n        fill={props.color}\r\n        d=\"M17.388,4.751H2.613c-0.213,0-0.389,0.175-0.389,0.389v9.72c0,0.216,0.175,0.389,0.389,0.389h14.775c0.214,0,0.389-0.173,0.389-0.389v-9.72C17.776,4.926,17.602,4.751,17.388,4.751 M16.448,5.53L10,11.984L3.552,5.53H16.448zM3.002,6.081l3.921,3.925l-3.921,3.925V6.081z M3.56,14.471l3.914-3.916l2.253,2.253c0.153,0.153,0.395,0.153,0.548,0l2.253-2.253l3.913,3.916H3.56z M16.999,13.931l-3.921-3.925l3.921-3.925V13.931z\"\r\n      />\r\n    </svg>\r\n  );\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport ColorPaletteOption from \"./components/ColorPaletteOption\";\nimport Colors from \"./components/Colors\";\nimport FontComboButton from \"./components/FontComboButton\";\nimport Button from \"./components/Button\";\nimport ColorThief from \"colorthief\";\nimport EmailIcon from \"./components/EmailIcon\";\n\nconst fontCombos = [\n  {\n    primaryFont: \"Raleway\",\n    secondaryFont: \"Lato\",\n    fontComboName: \"Traditional\"\n  },\n  {\n    primaryFont: \"Playfair Display\",\n    secondaryFont: \"Source Sans Pro\",\n    fontComboName: \"Condensed\"\n  },\n  {\n    primaryFont: \"Fascinate\",\n    secondaryFont: \"Nobile\",\n    fontComboName: \"Witty\"\n  }\n];\n\nconst coloredOptions = [\n  {\n    value: \"backgroundColor\",\n    label: \"Background color\"\n  },\n  {\n    value: \"nameColor\",\n    label: \"Name color\"\n  },\n  {\n    value: \"specialityColor\",\n    label: \"Field or Speciality Color\"\n  },\n  {\n    value: \"companyColor\",\n    label: \"Company Color\"\n  },\n  {\n    value: \"emailColor\",\n    label: \"E-mail Address Color\"\n  }\n];\n\nclass App extends React.Component {\n  state = {\n    colors: [],\n    bounce: false,\n    fullName: \"\",\n    speciality: \"\",\n    companyName: \"\",\n    eMail: \"\",\n    fontCombo: fontCombos[0],\n    coloredOption: coloredOptions[0].value,\n    nameColor: \"\",\n    specialityColor: \"\",\n    companyColor: \"\",\n    emailColor: \"\",\n    backgroundColor: \"\",\n    flipped: false,\n    companyURLKeyword: \"\",\n    hasError: false,\n    companyURL: \"\",\n    backsideBackground: \"\",\n    palette: []\n  };\n\n  async componentDidMount() {\n    this.generatePalette();\n    document.title = \"Business Card \";\n  }\n\n  generatePalette = async () => {\n    this.setState({ bounce: true });\n    const url = \"http://www.colr.org/json/colors/random/7\";\n    const response = await fetch(url);\n    const data = await response.json();\n\n    const fetchedColors = data.matching_colors;\n    const hexColors = fetchedColors\n      .filter(colorCode => colorCode.length > 0)\n      .map(colorCode => \"#\" + colorCode);\n    hexColors.push(\"#000000\", \"#FFFFFF\");\n\n    this.setState({ colors: hexColors });\n  };\n\n  getDominantColors = () => {\n\n    const colorThief = new ColorThief();\n    const img = new Image();\n\n    img.crossOrigin = \"Anonymous\";\n    img.src = \"https://logo.clearbit.com/\" + this.state.companyURLKeyword;\n\n    img.addEventListener(\"load\", () => {\n      let palette = colorThief.getPalette(img, 3, 1);\n      palette.push([0, 0, 0], [255, 255, 255]);\n\n      const rgbPalette = palette.map(color => {\n        return `rgb(${color})`;\n      });\n      this.setState({ palette: rgbPalette });\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  changeFont = fontCombo => {\n    this.setState({ fontCombo: fontCombo });\n  };\n\n  pickColor = (color, i) => {\n    this.setState({ [this.state.coloredOption]: color });\n  };\n\n  logoPickColor = (color, i) => {\n    this.setState({ backsideBackground: color });\n  };\n\n  flip = () => {\n    this.setState({ flipped: !this.state.flipped });\n  };\n\n  submitURL = () => {\n    this.setState({ hasError: false });\n    this.setState({ companyURL: \"//logo.clearbit.com/\" + this.state.companyURLKeyword });\n    this.getDominantColors();\n  };\n\n  render() {\n\n\n    return (\n      <div className=\"main\">\n        <div className=\"sidebar-inner\">\n          <div className={this.state.flipped ? \"sidebar hidden\" : \"sidebar\"}>\n            \n            <section>\n              <h2>Details</h2>\n\n              <div className=\"textFields\">\n                <input\n                  className=\"textFieldInput\"\n                  name=\"fullName\"\n                  placeholder=\"Your Name\"\n                  value={this.state.fullName}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className=\"textFieldInput\"\n                  name=\"speciality\"\n                  placeholder=\"Field or Speciality\"\n                  value={this.state.speciality}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className=\"textFieldInput\"\n                  name=\"companyName\"\n                  placeholder=\"Name of the Company\"\n                  value={this.state.companyName}\n                  onChange={this.handleChange}\n                />\n                <input\n                  className=\"textFieldInput\"\n                  name=\"eMail\"\n                  placeholder=\"E-mail Address\"\n                  value={this.state.eMail}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </section>\n\n            <section>\n              <ColorPaletteOption\n                coloredOptions={coloredOptions}\n                // Change state coloredOption to selectedColorOption\n                selectedColorOption={this.state.coloredOption}\n                handleChange={this.handleChange}\n                name=\"coloredOption\"\n              />\n\n              <Colors\n                colors={this.state.colors}\n                pickColor={this.pickColor}\n                bounce={this.state.bounce}\n                onAnimationEnd={() => this.setState({ bounce: false })}\n                generatePalette={this.generatePalette}\n              />\n            </section>\n\n            <section>\n              <h2>Fonts</h2>\n\n              <div>\n                {fontCombos.map((fontCombo, i) => (\n                  <FontComboButton\n                    fontComboName={fontCombo.fontComboName}\n                    checked={\n                      fontCombo.fontComboName ===\n                      this.state.fontCombo.fontComboName\n                    }\n                    changeFont={() => this.changeFont(fontCombo)}\n                    key={i}\n                  />\n                ))}\n              </div>\n            </section>\n\n            <h2>Click on a card to flip it</h2>\n\n          </div>\n          <div className={this.state.flipped ? \"sidebar\" : \"sidebar hidden\"}>\n            <div>\n              <h2>Logo</h2>\n              <input\n                className=\"textFieldInput\"\n                name=\"companyURLKeyword\"\n                placeholder=\"Company Website\"\n                type=\"text\"\n                value={this.state.companyURLKeyword}\n                onChange={this.handleChange}\n              />\n\n              <button className=\"submitButton\" onClick={this.submitURL}>Submit</button>\n\n              <div>\n                <h3>Example: facebook.com</h3>\n\n                {this.state.hasError ? (\n                  <div>\n                    <h2>Sorry, we didn't find your logo</h2>\n                    <h3>\n                      But you can choose a color for your card from this\n                      selection:\n                    </h3>\n                    <Colors\n                      colors={this.state.colors}\n                      pickColor={this.logoPickColor}\n                      bounce={this.state.bounce}\n                      onAnimationEnd={() => this.setState({ bounce: false })}\n                      generatePalette={this.generatePalette}\n                    />\n                  </div>\n                ) : (\n                  <div className=\"logoPalette\">\n                    {this.state.palette.map((color, i) => (\n                      <Button\n                        color={color}\n                        key={i}\n                        width=\"48px\"\n                        height=\"48px\"\n                        pickColor={() => this.logoPickColor(color)}\n                        className=\"colorBox\"\n                      />\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"rightContainer\">\n          <div\n            className={\n              this.state.flipped ? \"businessCard flipped\" : \"businessCard\"\n            }\n            onClick={this.flip}\n          >\n            <div className=\"businessCardInner\">\n              <div\n                className=\"businessCardFront\"\n                style={{ backgroundColor: this.state.backgroundColor }}\n              >\n                <h1\n                  className=\"companyChar\"\n                  style={{ fontFamily: fontCombos[1].primaryFont }}\n                >\n                  {this.state.companyName.charAt(0).toUpperCase()}\n                </h1>\n\n                <div className=\"leftTop\">\n                  <h1\n                    style={{\n                      fontFamily: this.state.fontCombo.primaryFont,\n                      color: this.state.nameColor\n                    }}\n                  >\n                    {this.state.fullName}\n                  </h1>\n                  <h2\n                    style={{\n                      fontFamily: this.state.fontCombo.secondaryFont,\n                      color: this.state.specialityColor\n                    }}\n                  >\n                    {this.state.speciality.toUpperCase()}\n                  </h2>\n                </div>\n\n                <div className=\"rightBottom\">\n                  <p\n                    style={{\n                      fontFamily: this.state.fontCombo.secondaryFont,\n                      color: this.state.companyColor\n                    }}\n                    className=\"companyName\"\n                  >\n                    {this.state.companyName}\n                  </p>\n                  <div className=\"eMail\">\n                    {this.state.eMail ? (\n                      <EmailIcon\n                        className=\"emailIcon\"\n                        color={this.state.emailColor}\n                      />\n                    ) : null}\n                    <p\n                      style={{\n                        fontFamily: this.state.fontCombo.secondaryFont,\n                        color: this.state.emailColor\n                      }}\n                    >\n                      {this.state.eMail}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"businessCardBack\"\n                style={{ background: this.state.backsideBackground ? this.state.backsideBackground : \"#ffffff\" }}\n              >\n                <div className=\"companyDiv\">\n                  {this.state.companyURL && !this.state.hasError ? (\n                    <img\n                      src={this.state.companyURL}\n                      alt=\"Logo of the Company\"\n                      onError={() => this.setState({ hasError: true })}\n                      className=\"companyLogo\"\n                    />\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}